{{- range $chain := .Values.chains }}
{{- if hasPrefix "ethereum-beacon" $chain.name }}
{{ $defaultFile := $.Files.Get "defaults.yaml" | fromYaml }}

{{ $chain := include "devnet.fullchain" (dict "name" $chain.id "file" $defaultFile "context" $) | fromJson }}
{{ $initParams := dict "chains" (list $chain.id) "port" $.Values.exposer.ports.rest "context" $ }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $chain.name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    app: {{ $chain.name }}
spec:
    serviceName: {{ $chain.name }}
    replicas: {{ $chain.replicas }}
    selector:
        matchLabels:
          app.kubernetes.io/instance: {{ $chain.name }}
          app.kubernetes.io/name: {{ $chain.name }}
    template:
      metadata:
        annotations:
          quality: release
          role: api-gateway
          sla: high
          tier: gateway
        labels:
          app.kubernetes.io/instance: {{ $chain.name }}
          app.kubernetes.io/type: {{ $chain.name }}
          app.kubernetes.io/name: {{ $chain.name }}
          app.kubernetes.io/rawname: {{ $chain.name }}
          app.kubernetes.io/version: {{ $.Chart.AppVersion }}
      spec:
        {{- include "imagePullSecrets" $chain | indent 6 }}
        initContainers:
        - name: init-genesis
          image: {{ $chain.config.prysmctl }}
          imagePullPolicy: Always
          command:
            - bash
            - "-c"
            - |
              mkdir -p /ethereum/consensus /ethereum/execution
              cp /config-execution/genesis.json /ethereum/execution/genesis.json
              cp /config-beacon/config.yaml /ethereum/consensus/config.yaml

              echo "Initializing genesis"
              prysmctl testnet generate-genesis \
                --fork=capella \
                {{- if $chain.config.validator.enabled }}
                --num-validators={{ $chain.config.validator.numValidator }} \
                {{- end }}
                --genesis-time-delay=15 \
                --output-ssz=/ethereum/consensus/genesis.ssz \
                --chain-config-file=/ethereum/consensus/config.yaml \
                --geth-genesis-json-in=/ethereum/execution/genesis.json \
                --geth-genesis-json-out=/ethereum/execution/genesis.json

              echo "Copy secrets over"
              cp /config-execution/jwt.hex /etc/secrets/jwt.hex
          resources: {{- include "devnet.node.resources" ( dict "node" $chain "context" $ ) | trim | nindent 12 }}
          volumeMounts:
            - name: secrets
              mountPath: /etc/secrets
            - name: config-beacon
              mountPath: /config-beacon
            - name: config-execution
              mountPath: /config-execution
            - name: ethereum
              mountPath: /ethereum
        {{- include "devnet.init.wait" $initParams | indent 8 }}
        containers:
        - name: node
          image: {{ $chain.image }}
          imagePullPolicy: Always
          env:
          - name: HTTP_PORT
            value: "8545"
          - name: WS_PORT
            value: "8546"
          - name: RPC_PORT
            value: "8551"
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          command:
            - bash
            - "-c"
            - |
              echo "Waiting 15 seconds for execution client to be ready..."

              echo "Starting consensus chain"
              beacon-chain \
                --execution-endpoint=http://ethereum-execution-0.ethereum-execution.default.svc.cluster.local:8551 \
                --jwt-secret=/etc/secrets/jwt.hex \
                --accept-terms-of-use \
                --http-host 0.0.0.0 \
                --rpc-host 0.0.0.0 \
                --chain-id 1337 \
                --contract-deployment-block=0 \
                --datadir /ethereum/consensus \
                --genesis-state /ethereum/consensus/genesis.ssz \
                --min-sync-peers=0 \
                --chain-config-file=/ethereum/consensus/config.yaml \
                --network-id 1337 \
                --suggested-fee-recipient=0x123463a4B065722E99115D6c222f267d9cABb524 \
                --minimum-peers-per-subnet=0 \
                --force-clear-db
          resources: {{- include "devnet.node.resources" ( dict "node" $chain "context" $ ) | trim | nindent 12 }}
          volumeMounts:
            - name: ethereum
              mountPath: /ethereum
            - name: secrets
              mountPath: /etc/secrets
        - name: validator
          image: ghcr.io/cosmology-tech/starship/prysm/validator:v5.2.0
          imagePullPolicy: Always
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - bash
            - "-c"
            - |
              echo "Waiting 15 seconds for execution client to be ready..."
              sleep 20
              mkdir -p /ethereum/consensus/validator
              echo "Starting validator node"
              validator \
                --accept-terms-of-use \
                --beacon-rpc-provider=localhost:4000 \
                --datadir=/ethereum/consensus/validator \
                --interop-num-validators=1 \
                --interop-start-index=0 \
                --force-clear-db \
                --chain-config-file=/ethereum/consensus/config.yaml \
                --suggested-fee-recipient=0x0C46c2cAFE097b4f7e1BB868B89e5697eE65f934
          resources: {{- include "devnet.node.resources" ( dict "node" $chain "context" $ ) | trim | nindent 12 }}
          volumeMounts:
            - name: ethereum
              mountPath: /ethereum
            - name: secrets
              mountPath: /etc/secrets
        volumes:
          - name: config-beacon
            configMap:
              name: config-beacon
          - name: config-execution
            configMap:
              name: config-execution
          - name: ethereum
            emptyDir: { }
          - name: secrets
            emptyDir: { }
---
{{- end }}
{{- end }}